From 9ae821a4533760c2e598c4b16bd7ead100b8e3ff Mon Sep 17 00:00:00 2001
From: Mayur Thakkar <mayurthakkar36.mt@gmail.com>
Date: Sun, 24 May 2020 11:04:15 +0530
Subject: [PATCH] create patch file

---
 0001-Create-Patch-File.patch | 93 --------------------------------------------
 1 file changed, 93 deletions(-)
 delete mode 100644 0001-Create-Patch-File.patch

diff --git a/0001-Create-Patch-File.patch b/0001-Create-Patch-File.patch
deleted file mode 100644
index 70f9ea3..0000000
--- a/0001-Create-Patch-File.patch
+++ /dev/null
@@ -1,93 +0,0 @@
-From 79f4674911bced130fa12ea21d32cb4a1510d41f Mon Sep 17 00:00:00 2001
-From: Mayur Thakkar <mayurthakkar36.mt@gmail.com>
-Date: Thu, 21 May 2020 01:54:43 +0530
-Subject: [PATCH] Create Patch File
-
----
- src/App.tsx   | 23 ++++++++++++++++++-----
- src/Graph.tsx | 10 ++++++++++
- 2 files changed, 28 insertions(+), 5 deletions(-)
-
-diff --git a/src/App.tsx b/src/App.tsx
-index 0728518..22207b1 100755
---- a/src/App.tsx
-+++ b/src/App.tsx
-@@ -8,6 +8,7 @@ import './App.css';
-  */
- interface IState {
-   data: ServerRespond[],
-+  showGraph: boolean,
- }
- 
- /**
-@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
-       // data saves the server responds.
-       // We use this state to parse data down to the child element (Graph) as element property
-       data: [],
-+      showGraph: false,
-     };
-   }
- 
-@@ -29,19 +31,30 @@ class App extends Component<{}, IState> {
-    * Render Graph react component with state.data parse as property data
-    */
-   renderGraph() {
--    return (<Graph data={this.state.data}/>)
-+    if(this.state.showGraph) {
-+      return (<Graph data={this.state.data}/>)
-+    }
-   }
- 
-   /**
-    * Get new data from server and update the state with the new data
-    */
--  getDataFromServer() {
--    DataStreamer.getData((serverResponds: ServerRespond[]) => {
-+ 
-       // Update the state by creating a new array of data that consists of
-       // Previous data in the state and the new data from server
--      this.setState({ data: [...this.state.data, ...serverResponds] });
-+      this.setState ({
-+        data: serverResponds ,
-+        showGraph: true ,
-+      });
-     });
--  }
-+    x++;
-+    if (x > 1000)
-+    {
-+      clearInterval(interval);
-+    } 
-+  }, 100);
-+}
-+
- 
-   /**
-    * Render the App react component
-diff --git a/src/Graph.tsx b/src/Graph.tsx
-index ec1430e..5c06af5 100644
---- a/src/Graph.tsx
-+++ b/src/Graph.tsx
-@@ -49,9 +49,19 @@ class Graph extends Component<IProps, {}> {
- 
-       // Add more Perspective configurations here.
-       elem.load(this.table);
-+      elem.setAttribute('view', 'y_line');
-+      elem.setAttribute('column-pivots', '["stock"]');
-+      elem.setAttribute('row-pivots', '["timestamp"]');
-+      elem.setAttribute('columns','["top_ask_price"]');
-+      elem.setAttribute('aggregates', `
-+      {"stock": "discount count",
-+      "top_ask_price":"avg",
-+      "top_bid_price": "avg",
-+      "timestamp":"distinct count"}`)
-     }
-   }
- 
-+
-   componentDidUpdate() {
-     // Everytime the data props is updated, insert the data into Perspective table
-     if (this.table) {
--- 
-2.12.2.windows.2
-
-- 
2.12.2.windows.2

